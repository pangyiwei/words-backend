{"version":3,"sources":["components/Spinner.js","util/regexp.js","services/GameService.js","pages/MainPage/MainPage.js","pages/GamePage/components/Fireworks.js","pages/GamePage/components/Car.js","pages/GamePage/components/PositionBar.js","pages/GamePage/components/RollByProgress.js","util/colors.js","pages/GamePage/components/PlayersProgress.js","pages/GamePage/components/Stats.js","pages/GamePage/components/TextArea.js","components/Modal.js","pages/GamePage/GameLobby.js","pages/GamePage/components/GameEndingModal.js","pages/GamePage/GamePage.js","App.js","index.js"],"names":["Spinner","show","className","nonAlphanumericRegExp","RegExpUtil","str","match","replace","GameService","sendGameRequest","gameId","username","a","Promise","resolve","reject","socket","emit","on","message","gameState","socketId","readyGame","ready","listenForStart","callback","hasGameEnded","listenForMessages","listenForGameEnd","sendProgressUpdate","progress","sendColorChange","color","this","socketIOClient","ServiceContext","React","createContext","ServiceContextProvider","props","Provider","value","children","withService","Component","Consumer","service","gameService","sanitize","removeNonAlphanumeric","useState","isLoading","setLoading","name","setName","game","setGame","willRedirect","setRedirect","tryToRedirect","validityTestResult","length","isAlphanumeric","result","window","alert","onChange","e","target","maxLength","onClick","to","Fireworks","Array","map","i","idx","key","Car","rotation","rotationStyle","style","borderColor","background","transform","getPositionClass","position","PositionBar","posClass","toUpperCase","RollByProgress","ref","useRef","textRef","width","setWidth","useEffect","_updateWidth","prevWidth","current","clientWidth","updateWidth","_","debounce","addEventListener","removeEventListener","itsYou","wheelRadius","Math","PI","marginLeft","zIndex","marginBottom","min","textAlign","whiteSpace","transition","getRandomLightColor","luminosity","r","randChannel","g","b","random","PlayersProgress","players","flex","overflowY","overflowX","display","p","Stats","showStats","wpm","errorCount","fontSize","fontWeight","flexFlow","margin","TextArea","createRef","handleOnFocus","setState","focused","handleOnBlur","state","handleKeyDown","focus","typed","leftOver","error","tabIndex","backgroundColor","padding","onFocus","onBlur","slice","Modal","renderTitle","renderReadyText","isReady","renderPlayerCard","isPlayerReady","updatePlayerColor","renderSwatchPicker","renderPlayerGrid","gridTemplateColumns","justifyItems","renderPlayerEntry","onSelectColor","alignItems","onChangeComplete","triangle","renderStartingModal","counter","GameLobby","player","onStart","startingCounter","onColorChange","singlePressCheck","handleKeydown","preventDefault","resetSinglePressCheck","hex","GameEndingModal","timeLeft","Status","LOADING","LOBBY","STARTING","RUNNING","ENDED","defaultState","time","GamePage","loadGame","params","id","gameStatus","started","readyForGameStart","prev","handleGameStart","text","startingTimeLeft","countdownFromState","handleGameMsg","resetGameState","handleGameEnd","endingTimeLeft","varName","onFinish","countdownCallback","clearInterval","interval","prevState","setInterval","resetMeasurer","clearTimeout","autoMeasureInterval","setTimeout","measureStats","keyCode","Date","getTime","getWpm","split","toFixed","filter","withRouter","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae2e277f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = ({ show }) => {\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <div className=\"spinner-cover\">\r\n      <div className=\"spinner-container\">\r\n        <div className=\"lds-ring\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <div className=\"spinner-text\">Loading...</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","const nonAlphanumericRegExp = /[^a-zA-Z0-9]/g;\r\n\r\nclass RegExpUtil {\r\n  static isAlphanumeric(str) {\r\n    return !str.match(nonAlphanumericRegExp);\r\n  }\r\n  static removeNonAlphanumeric(str) {\r\n    return str.replace(nonAlphanumericRegExp, \"\");\r\n  }\r\n}\r\n\r\nexport default RegExpUtil;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { sleep } from \"../util/timer\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\n// const ENDPOINT = \"http://192.168.137.1:8090\";\r\n// const ENDPOINT = \"localhost:8090\";\r\nconst ENDPOINT = \"/\";\r\n\r\nclass GameService {\r\n  constructor() {\r\n    // console.log(\"WARNING: THIS SHOULD ONLY BE CALLED ONCE\");\r\n    this.socket = socketIOClient(ENDPOINT);\r\n    this.gameState = null;\r\n    this.socketId = null;\r\n  }\r\n\r\n  sendGameRequest = async (gameId, username) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.socket.emit(\"join\", { gameId, username });\r\n      this.socket.on(\"init\", message => {\r\n        // console.log(\"Received Init Message:\", message);\r\n        this.gameState = message;\r\n        this.socketId = message.socketId;\r\n        resolve(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  readyGame = ready => {\r\n    return new Promise((resolve, reject) => {\r\n      this.socket.emit(\"ready\", { ready });\r\n    });\r\n  };\r\n\r\n  listenForStart = callback => {\r\n    this.socket.on(\"start\", message => {\r\n      // console.log(\"Game started!\", message);\r\n      this.hasGameEnded = false;\r\n      this.gameState = message;\r\n      callback();\r\n    });\r\n  };\r\n\r\n  listenForMessages = callback => {\r\n    this.socket.on(\"message\", message => {\r\n      // console.log(\"Received Update: \", message);\r\n      this.gameState = message;\r\n      callback();\r\n    });\r\n  };\r\n\r\n  listenForGameEnd = callback => {\r\n    this.socket.on(\"end\", message => {\r\n      this.hasGameEnded = true;\r\n      callback();\r\n    });\r\n  };\r\n\r\n  sendProgressUpdate = progress => {\r\n    this.socket.emit(\"update\", { progress });\r\n  };\r\n\r\n  sendColorChange = color => {\r\n    this.socket.emit(\"changeColor\", { color });\r\n  };\r\n}\r\n\r\nconst ServiceContext = React.createContext(null);\r\n\r\nexport const ServiceContextProvider = props => {\r\n  return (\r\n    <ServiceContext.Provider value={new GameService()}>\r\n      {props.children}\r\n    </ServiceContext.Provider>\r\n  );\r\n};\r\n\r\nexport const withService = Component => props => {\r\n  return (\r\n    <ServiceContext.Consumer>\r\n      {service => <Component gameService={service} {...props} />}\r\n    </ServiceContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default GameService;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport RegExpUtil from \"../../util/regexp\";\r\nimport { withService } from \"../../services/GameService\";\r\nimport \"./MainPage.css\";\r\n\r\nconst MainPage = ({ gameService }) => {\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [game, setGame] = React.useState(\"\");\r\n  const [willRedirect, setRedirect] = React.useState(false);\r\n\r\n  const handleNameChange = e => setName(e.target.value);\r\n  const handleGameChange = e => setGame(e.target.value);\r\n\r\n  const renderRedirector = () => {\r\n    if (willRedirect) {\r\n      return <Redirect to={`/game/${sanitize(game)}`} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const testForValidInput = () => {\r\n    if (name.length === 0) {\r\n      return \"Please enter a name.\";\r\n    }\r\n    if (game.length === 0) {\r\n      return \"Please enter a game ID.\";\r\n    }\r\n    if (!RegExpUtil.isAlphanumeric(game)) {\r\n      return \"Please do not enter non-alphanumeric characters into the game ID.\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const tryToRedirect = async () => {\r\n    const validityTestResult = testForValidInput();\r\n    if (validityTestResult === \"\") {\r\n      setLoading(true);\r\n      const result = await gameService.sendGameRequest(game, name);\r\n      setLoading(false);\r\n\r\n      if (result) {\r\n        setRedirect(true);\r\n      } else {\r\n        window.alert(\"Game ID does not exist!\");\r\n      }\r\n    } else {\r\n      window.alert(validityTestResult);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Words</h1>\r\n      <div className=\"input-container\">\r\n        <div className=\"individual-input\">\r\n          <div className=\"label\">Enter your name:</div>\r\n          <input\r\n            className=\"input\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            maxLength={16}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"individual-input\">\r\n          <div className=\"label\">Enter your game:</div>\r\n          <input\r\n            className=\"input\"\r\n            value={game}\r\n            onChange={handleGameChange}\r\n            maxLength={16}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"submit\" onClick={tryToRedirect}>\r\n          Enter Game\r\n        </button>\r\n        {renderRedirector()}\r\n      </div>\r\n      <Spinner show={isLoading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst sanitize = str => RegExpUtil.removeNonAlphanumeric(str);\r\n\r\nexport default withService(MainPage);\r\n","import React from \"react\";\r\nimport \"./Fireworks.css\";\r\n\r\nconst Fireworks = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"blauw\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"paars\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"rood\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"oranje\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"geel\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"groen\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"blauw2\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"paars2\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"rood2\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"oranje2\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"geel2\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n      <div className=\"groen2\">\r\n        {[...Array(22)].map((i, idx) => (\r\n          <div className=\"punt\" key={idx} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fireworks;\r\n","import React from \"react\";\r\nimport \"./Car.css\";\r\n\r\nconst Car = props => {\r\n  const { color = \"white\", rotation } = props;\r\n\r\n  const rotationStyle = `rotate(${rotation}deg)`;\r\n\r\n  return (\r\n    <div className=\"car\">\r\n      <div className=\"car-body\" style={{ borderColor: color }}>\r\n        <div className=\"car-body-before\" style={{ background: color }} />\r\n        <div className=\"car-top-back\">\r\n          <div className=\"back-curve\"></div>\r\n        </div>\r\n        <div className=\"car-top-front\" style={{ background: color }}>\r\n          <div\r\n            className=\"car-top-front-before\"\r\n            style={{ background: color, borderColor: color }}\r\n          />\r\n          <div className=\"wind-sheild\"></div>\r\n          <div className=\"car-top-front-after\" style={{ background: color }} />\r\n        </div>\r\n        <div className=\"bonet-front\" style={{ background: color }} />\r\n        <div className=\"stepney\"></div>\r\n        <div className=\"car-body-after\" style={{ borderColor: color }} />\r\n      </div>\r\n      <div className=\"boundary-tyre-cover\">\r\n        <div className=\"boundary-tyre-cover-back-bottom\"></div>\r\n        <div className=\"boundary-tyre-cover-inner\"></div>\r\n      </div>\r\n      <div className=\"tyre-cover-front\">\r\n        <div className=\"boundary-tyre-cover-inner-front\"></div>\r\n      </div>\r\n      <div className=\"base-axcel\"></div>\r\n      <div className=\"front-bumper\"></div>\r\n      <div className=\"tyre\" style={{ transform: rotationStyle }}>\r\n        <div className=\"gap\"></div>\r\n      </div>\r\n      <div className=\"tyre front\" style={{ transform: rotationStyle }}>\r\n        <div className=\"gap\"></div>\r\n      </div>\r\n      <div className=\"car-shadow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Car;\r\n","import React from 'react';\r\nimport './PositionBar.css';\r\n\r\nconst PositionBar = ({position}) => {\r\n  const posClass = getPositionClass(position);\r\n\r\n  return <div className={`pos-container ${posClass}`}>{posClass.toUpperCase()}</div>\r\n}\r\n\r\nconst getPositionClass = (position) => {\r\n  switch(position) {\r\n    case 0:\r\n      return \"first\";\r\n    case 1:\r\n      return \"second\";\r\n    case 2:\r\n      return \"third\";\r\n    default:\r\n      return \"\";\r\n  }\r\n} \r\n\r\nexport default PositionBar;","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport Car from \"./Car\";\r\nimport PositionBar from './PositionBar';\r\nimport \"./RollByProgress.css\";\r\n\r\nconst carOffset = 170;\r\n\r\nconst RollByProgress = props => {\r\n  const ref = React.useRef();\r\n  const textRef = React.useRef();\r\n  const [width, setWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const _updateWidth = () => {\r\n      setWidth(prevWidth => ref.current.clientWidth - carOffset);\r\n      // console.log(ref.current.clientWidth - carOffset);\r\n    };\r\n    const updateWidth = _.debounce(_updateWidth, 250);\r\n\r\n    _updateWidth();\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  }, []);\r\n\r\n  const { itsYou, name, progress, wheelRadius, color, position } = props;\r\n\r\n  const getTextOffset = () => {\r\n    if (!textRef.current) return 0;\r\n\r\n    return Math.min(\r\n      0,\r\n      width + carOffset - (progress * width + textRef.current.clientWidth)\r\n    );\r\n  };\r\n\r\n  let rotation;\r\n  if (width !== 0) {\r\n    rotation = progress * (width / (2 * Math.PI * wheelRadius)) * 360;\r\n  } else {\r\n    rotation = 0;\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} className=\"rollbyprogress-container\">\r\n      <div className=\"car-container\" style={{ marginLeft: progress * width }}>\r\n        <div\r\n          ref={textRef}\r\n          style={{\r\n            color: itsYou ? \"#fcba03\" : \"white\",\r\n            zIndex: 99,\r\n            marginBottom: \"1.25em\",\r\n            marginLeft: getTextOffset(),\r\n            textAlign: \"center\",\r\n            whiteSpace: \"nowrap\",\r\n            transition: \"0.4s all linear\"\r\n          }}\r\n        >\r\n          {name + (itsYou ? \" (You)\" : \"\")}\r\n        </div>\r\n        <Car color={color} rotation={rotation} />\r\n      </div>\r\n      <PositionBar position={position} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RollByProgress;\r\n","const Colors = [\r\n  \"#d1352b\", // red\r\n  \"#1B9AAA\",\r\n  \"#B9F18C\",\r\n  \"#a6cee3\",\r\n  \"#1f78b4\",\r\n  \"#b2df8a\",\r\n  \"#33a02c\",\r\n  \"#fb9a99\",\r\n  \"#e31a1c\",\r\n  \"#fdbf6f\",\r\n  \"#ff7f00\",\r\n  \"#cab2d6\",\r\n  \"#6a3d9a\",\r\n  \"#ffff99\",\r\n  \"#b15928\"\r\n];\r\n\r\nexport const getRandomLightColor = (luminosity = 0.7) => {\r\n  const r = randChannel(luminosity);\r\n  const g = randChannel(luminosity);\r\n  const b = randChannel(luminosity);\r\n  return `rgb(${r}, ${g}, ${b}`;\r\n};\r\n\r\nconst randChannel = luminosity =>\r\n  (Math.random() * (1 - luminosity) + luminosity) * 255;\r\n\r\nexport default Colors;","import React from \"react\";\r\nimport RollByProgress from \"./RollByProgress\";\r\nimport Colors from \"../../../util/colors\";\r\n\r\nconst PlayersProgress = ({ socketId, players }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        flex: 1,\r\n        overflowY: \"auto\",\r\n        overflowX: \"visible\",\r\n        zIndex: 300,\r\n        display: \"block\",\r\n        position: \"relative\"\r\n      }}\r\n    >\r\n      {players.map((p, idx) => {\r\n        return (\r\n          <RollByProgress\r\n            color={p.color}\r\n            itsYou={socketId === p.socketId}\r\n            name={p.username}\r\n            progress={p.progress}\r\n            position={p.position}\r\n            wheelRadius={15}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayersProgress;\r\n","import React from \"react\";\r\n\r\nconst Stats = ({ showStats, wpm, errorCount }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        fontSize: \"2em\",\r\n        fontWeight: \"bold\",\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        margin: \"1em 0\"\r\n      }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        {showStats ? \"WPM:  \" + wpm : \"Start typing to get WPM\"}\r\n      </div>\r\n      {showStats ? (\r\n        <div style={{ flex: 1, color: \"#AA0000\" }}>\r\n          Errors: {errorCount}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport \"./TextArea.css\";\r\n\r\nclass TextArea extends React.Component {\r\n  ref = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { focused: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ref.current.addEventListener(\"keydown\", this.props.handleKeyDown);\r\n    this.ref.current.focus();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.ref.current.removeEventListener(\"keydown\", this.props.handleKeyDown);\r\n  }\r\n\r\n  handleOnFocus = () => this.setState({ focused: true });\r\n  handleOnBlur = () => this.setState({ focused: false });\r\n\r\n  render() {\r\n    const { typed, leftOver, error } = this.props;\r\n    return (\r\n      <div\r\n        tabIndex=\"0\"\r\n        ref={this.ref}\r\n        style={{\r\n          width: \"calc(100% - 48px)\",\r\n          fontSize: \"2em\",\r\n          flex: 1,\r\n          backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n          padding: \"24px\"\r\n        }}\r\n        onFocus={this.handleOnFocus}\r\n        onBlur={this.handleOnBlur}\r\n      >\r\n        <span\r\n          style={{ color: \"cyan\" }}\r\n          className={this.state.focused ? \"blink\" : \"\"}\r\n        >\r\n          {typed}\r\n        </span>\r\n        <span style={{ backgroundColor: \"red\" }}>\r\n          {error ? leftOver[0] : \"\"}\r\n        </span>\r\n        {error ? leftOver.slice(1) : leftOver}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = ({ show, children, style }) => {\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-card\" style={style}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { getRandomLightColor } from \"../../util/colors\";\r\nimport Car from \"./components/Car\";\r\nimport \"./GamePage.css\";\r\nimport \"./GameLobby.css\";\r\nimport { TwitterPicker as ColorPicker } from \"react-color\";\r\nimport Colors from \"../../util/colors\";\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst GameLobby = ({\r\n  gameId,\r\n  isPlayerReady,\r\n  player,\r\n  players,\r\n  onStart,\r\n  startingCounter,\r\n  onColorChange\r\n}) => {\r\n  React.useEffect(() => {\r\n    let singlePressCheck = false;\r\n\r\n    const handleKeydown = e => {\r\n      if (e.key === \" \" && !singlePressCheck) {\r\n        e.preventDefault();\r\n        singlePressCheck = true;\r\n        onStart();\r\n      }\r\n    };\r\n\r\n    const resetSinglePressCheck = () => (singlePressCheck = false);\r\n\r\n    window.addEventListener(\"keydown\", handleKeydown);\r\n    window.addEventListener(\"keyup\", resetSinglePressCheck);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeydown);\r\n      window.removeEventListener(\"keyup\", resetSinglePressCheck);\r\n    };\r\n  }, []);\r\n\r\n  const updatePlayerColor = color => {\r\n    onColorChange(color.hex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {renderTitle(gameId)}\r\n      {renderReadyText()}\r\n      {renderPlayerCard(player.username, isPlayerReady, player.color, updatePlayerColor)}\r\n      {renderPlayerGrid(players)}\r\n      {renderStartingModal(startingCounter)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderTitle = gameId => (\r\n  <h2 style={{ color: getRandomLightColor() }}>Lobby ID: {gameId}</h2>\r\n);\r\n\r\nconst renderReadyText = isReady => {\r\n  if (isReady) {\r\n    return (\r\n      <h2 className=\"ready-text\">\r\n        Please wait for the other players to get ready.\r\n      </h2>\r\n    );\r\n  } else {\r\n    return <h2 className=\"ready-text flash\">Press space to get ready.</h2>;\r\n  }\r\n};\r\n\r\nconst renderPlayerCard = (name, isPlayerReady, color, updatePlayerColor) => (\r\n  <div className=\"user-player-card\">\r\n    <div style={{ display: \"flex\" }}>\r\n      <div className=\"lobby-car-container\">\r\n        <Car color={color} />\r\n      </div>\r\n      <div className=\"player-title-card\">\r\n        <p className=\"player-title\">{name}</p>\r\n        <p style={{ color: isPlayerReady ? \"#15ff00\" : \"transparent\" }}>\r\n          READY\r\n        </p>\r\n      </div>\r\n    </div>\r\n    {renderSwatchPicker(updatePlayerColor)}\r\n  </div>\r\n);\r\n\r\nconst renderPlayerGrid = players => (\r\n  <div\r\n    style={{\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(auto-fit, minmax(480px, 1fr) )\",\r\n      justifyItems: \"center\"\r\n    }}\r\n  >\r\n    {players.map(p => renderPlayerEntry(p.username, p.ready, p.color))}\r\n  </div>\r\n);\r\n\r\nconst renderPlayerEntry = (name, ready, color) => (\r\n  <div className=\"player-card\">\r\n    <div className=\"lobby-car-container\">\r\n      <Car color={color} />\r\n    </div>\r\n    <div className=\"player-title-card\">\r\n      <p className=\"player-title\">{name}</p>\r\n      <p style={{ color: ready ? \"#15ff00\" : \"transparent\" }}>READY</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst renderSwatchPicker = onSelectColor => (\r\n  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n    <h3>Color:</h3>\r\n    <ColorPicker\r\n      onChangeComplete={onSelectColor}\r\n      className=\"color-picker\"\r\n      width=\"100%\"\r\n      triangle=\"hide\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst renderStartingModal = counter => {\r\n  if (counter === -1) return null;\r\n\r\n  return (\r\n    <Modal show>\r\n      <p style={{ fontSize: \"2em\" }}>Game starting in</p>\r\n      <div style={{ fontSize: \"3em\", marginBottom: \"0.75em\" }}>{counter}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GameLobby;\r\n","import React from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\n\r\nconst GameEndingModal = ({ show, timeLeft = 0 }) => {\r\n  return (\r\n    <Modal show={show} style={{ fontSize: \"2em\", width: \"50%\" }}>\r\n      <p>Game has ended!</p>\r\n      <p style={{ color: \"#ccc\" }}>Returning to lobby in {timeLeft}...</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GameEndingModal;\r\n","import React, { Component } from \"react\";\r\nimport Fireworks from \"./components/Fireworks\";\r\nimport PlayersProgress from \"./components/PlayersProgress\";\r\nimport Stats from \"./components/Stats\";\r\nimport TextArea from \"./components/TextArea\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { withService } from \"../../services/GameService\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./GamePage.css\";\r\nimport GameLobby from \"./GameLobby\";\r\nimport GameEndingModal from \"./components/GameEndingModal\";\r\nimport { getRandomLightColor } from \"../../util/colors\";\r\n\r\nconst Status = {\r\n  LOADING: 0,\r\n  LOBBY: 1,\r\n  STARTING: 2,\r\n  RUNNING: 3,\r\n  ENDED: 4\r\n};\r\n\r\nconst defaultState = {\r\n  typed: \"\",\r\n  leftOver: \"\",\r\n  error: false,\r\n  errorCount: 0,\r\n  time: -1\r\n};\r\n\r\n/**\r\n * Main Game Page business logic class that handles network I/O and\r\n * macro game state handling such as whether the game is in the lobby or has\r\n * already started\r\n */\r\nclass GamePage extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     gameStatus: Status.LOADING\r\n  //   };\r\n  // }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPlayerReady: false,\r\n      // FOR GAME ONLY\r\n      typed: \"\",\r\n      leftOver: \"\",\r\n      error: false,\r\n      errorCount: 0,\r\n      time: -1\r\n    };\r\n    this.autoMeasureInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadGame();\r\n    // console.log(\"Received this state\", this.props.gameService.gameState);\r\n\r\n    // Connect client to listen for websocket events\r\n    this.props.gameService.listenForStart(this.handleGameStart);\r\n    this.props.gameService.listenForMessages(this.handleGameMsg);\r\n    this.props.gameService.listenForGameEnd(this.handleGameEnd);\r\n  }\r\n\r\n  loadGame = async () => {\r\n    if (!this.props.gameService.gameState) {\r\n      await this.props.gameService.sendGameRequest(\r\n        this.props.match.params.id,\r\n        \"\"\r\n      );\r\n    }\r\n\r\n    const gameStatus = this.props.gameService.gameState.started\r\n      ? Status.LOADING\r\n      : Status.LOBBY;\r\n\r\n    this.setState({\r\n      gameStatus\r\n    });\r\n  };\r\n\r\n  readyForGameStart = () => {\r\n    this.props.gameService.readyGame(!this.state.isPlayerReady);\r\n    this.setState(prev => ({ isPlayerReady: !prev.isPlayerReady }));\r\n  };\r\n\r\n  handleGameStart = () => {\r\n    this.setState({\r\n      leftOver: this.props.gameService.gameState.text,\r\n      gameStatus: Status.STARTING,\r\n      startingTimeLeft: 3\r\n    });\r\n\r\n    this.countdownFromState(\"startingTimeLeft\", () =>\r\n      this.setState({ gameStatus: Status.RUNNING, isPlayerReady: false })\r\n    );\r\n  };\r\n\r\n  handleGameMsg = () => {\r\n    if (!this.props.gameService.gameState.started) {\r\n      this.setState({ gameStatus: Status.LOBBY });\r\n      this.resetGameState();\r\n    } else {\r\n      this.setState({});\r\n    }\r\n  };\r\n\r\n  handleGameEnd = () => {\r\n    this.setState({ gameStatus: Status.ENDED, endingTimeLeft: 5 });\r\n    this.countdownFromState(\"endingTimeLeft\");\r\n  };\r\n\r\n  countdownFromState = (varName, onFinish = () => {}) => {\r\n    const countdownCallback = () => {\r\n      if (this.state[varName] <= 1) {\r\n        onFinish();\r\n        return clearInterval(interval);\r\n      }\r\n      this.setState(prevState => ({\r\n        [varName]: prevState[varName] - 1\r\n      }));\r\n    };\r\n\r\n    const interval = setInterval(countdownCallback, 1000);\r\n  };\r\n\r\n  /* ALL FUNCTIONS BELOW HERE SHOULD BE REFACTORED OUT*/\r\n  resetGameState = () => {\r\n    this.setState({ ...this.state, ...defaultState });\r\n  };\r\n\r\n  resetMeasurer = () => {\r\n    clearTimeout(this.autoMeasureInterval);\r\n    this.autoMeasureInterval = setTimeout(this.measureStats, 2000);\r\n  };\r\n\r\n  measureStats = () => {\r\n    // Force re-render to reacquire WPM\r\n    this.setState({});\r\n    this.resetMeasurer();\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode === 16 || this.state.leftOver.length === 0) return;\r\n\r\n    // Reset automeasurer time\r\n    this.resetMeasurer();\r\n\r\n    if (e.key === this.state.leftOver[0]) {\r\n      const typed = this.state.typed + e.key;\r\n      const leftOver = this.state.leftOver.slice(1);\r\n      this.setState({ typed, leftOver, error: false });\r\n      this.props.gameService.sendProgressUpdate(\r\n        this.state.typed.length / this.props.gameService.gameState.text.length\r\n      );\r\n\r\n      // End game\r\n      if (this.state.leftOver.length === 0) {\r\n        clearTimeout(this.autoMeasureInterval);\r\n      }\r\n\r\n      // If initiating the game itself\r\n      if (this.state.time === -1) {\r\n        this.setState({ time: new Date().getTime() });\r\n      }\r\n    } else {\r\n      this.setState(prevState => ({\r\n        error: true,\r\n        errorCount: prevState.errorCount + 1\r\n      }));\r\n    }\r\n  };\r\n\r\n  getWpm = () => {\r\n    // Prevent recording wpm when zero words are typed\r\n    if (this.state.typed.split(\" \").length === 1) {\r\n      return \"Measuring...\";\r\n    }\r\n\r\n    return (\r\n      (this.state.typed.split(\" \").length /\r\n        (new Date().getTime() - this.state.time)) *\r\n      60000\r\n    ).toFixed(0);\r\n  };\r\n\r\n  render() {\r\n    const { typed, leftOver, error, gameStatus } = this.state;\r\n\r\n    if (\r\n      (gameStatus === Status.LOBBY || gameStatus === Status.STARTING) &&\r\n      this.props.gameService.gameState\r\n    ) {\r\n      const player = this.props.gameService.gameState.players.filter(\r\n        p => p.socketId === this.props.gameService.socketId\r\n      )[0];\r\n\r\n      return (\r\n        <GameLobby\r\n          onStart={this.readyForGameStart}\r\n          gameId={this.props.gameService.gameState.id}\r\n          onColorChange={this.props.gameService.sendColorChange}\r\n          startingCounter={\r\n            gameStatus !== Status.STARTING ? -1 : this.state.startingTimeLeft\r\n          }\r\n          player={player}\r\n          isPlayerReady={this.state.isPlayerReady}\r\n          players={this.props.gameService.gameState.players.filter(\r\n            p => p.socketId !== this.props.gameService.socketId\r\n          )}\r\n        />\r\n      );\r\n    }\r\n\r\n    const renderGameElement = () => (\r\n      <>\r\n        <div style={{ width: \"100%\" }}>\r\n          <Stats\r\n            showStats={this.state.time !== -1}\r\n            wpm={this.getWpm()}\r\n            errorCount={this.state.errorCount}\r\n          />\r\n          <TextArea\r\n            typed={typed}\r\n            leftOver={leftOver}\r\n            error={error}\r\n            handleKeyDown={this.handleKeyDown}\r\n          />\r\n        </div>\r\n        <PlayersProgress\r\n          socketId={this.props.gameService.socketId}\r\n          players={this.props.gameService.gameState.players}\r\n        />\r\n        {this.state.typed.length > 0 && this.state.leftOver.length === 0 ? (\r\n          <Fireworks />\r\n        ) : null}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className=\"game-container\">\r\n        {gameStatus === Status.RUNNING || gameStatus === Status.ENDED\r\n          ? renderGameElement()\r\n          : null}\r\n        <Spinner show={gameStatus === Status.LOADING} />\r\n        <GameEndingModal\r\n          show={gameStatus === Status.ENDED}\r\n          timeLeft={this.state.endingTimeLeft}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withService(GamePage));\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\nimport GamePage from \"./pages/GamePage/GamePage\";\r\nimport { ServiceContextProvider } from \"./services/GameService\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ServiceContextProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <MainPage />\r\n            </Route>\r\n            <Route path=\"/game/:id\">\r\n              <GamePage />\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </ServiceContextProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}